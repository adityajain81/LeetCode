Approach:



Code:
class Solution {
private:
    int solve(vector<int>& nums, int target, int n, int lo, int hi)
    {
        while(lo<=hi)
        {
            int mid = lo + (hi-lo)/2;
            if(nums[mid]==target)
            {
                return mid;
            }
            if(nums[mid]>target)
            {
                if(solve(nums,target,n,lo,mid-1)!=-1)
                {
                    return solve(nums,target,n,lo,mid-1);
                }
                else
                {
                    return solve(nums,target,n,mid+1,hi);
                }
            }
            else if (nums[mid]<target)
            {
                if(solve(nums,target,n,lo,mid-1)!=-1)
                {
                    return solve(nums,target,n,lo,mid-1);
                }
                else
                {
                    return solve(nums,target,n,mid+1,hi);
                }
            }
        }
        return -1;
    }
public:
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int lo=0;
        int hi = n-1;
        return solve(nums,target,n,lo,hi);
    }
};
