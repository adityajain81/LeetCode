Approach:




Code:
class Solution {
public:
    int trap(vector<int>& height) {
        int n = height.size();
        stack <int> st;
        int cnt=0;
        int ttl=0;
        int ans=0;
        int lstele=0;
        for(int i=0;i<n;i++)
        {
            // st.push(height[i]);
            cnt=0;
            ttl=0;
            while(!st.empty()&&st.top()<=height[i])
            {
                lstele = st.top();
                st.pop();
                ttl+=lstele;
                cnt++;
            }
            if(!st.empty())
            {
                lstele = min(st.top(),height[i]);
            }
            ans+=(lstele*cnt-ttl);
            if(!st.empty())
            {
                while(cnt>0)
                {
                    st.push(lstele);
                    cnt--;
                }
            }
            st.push(height[i]);
            
        }
        return ans;
    }
};
